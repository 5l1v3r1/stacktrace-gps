{"version":3,"sources":["stackframe.js","bundle.js","stacktrace-gps.js"],"names":["root","factory","define","amd","exports","module","StackFrame","this","_isNumber","n","isNaN","parseFloat","isFinite","functionName","args","fileName","lineNumber","columnNumber","undefined","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","prototype","getFunctionName","v","String","getArgs","Object","toString","call","TypeError","getFileName","getLineNumber","Number","getColumnNumber","join","SourceMap","modules","__webpack_require__","moduleId","installedModules","id","loaded","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","require","SourceMapConsumer","aSourceMap","sourceMap","JSON","parse","replace","version","util","getArg","sources","names","sourceRoot","sourcesContent","mappings","file","_version","Error","map","normalize","_names","ArraySet","fromArray","_sources","_mappings","binarySearch","base64VLQ","fromSourceMap","smc","create","toArray","_sourceRoot","_generateSourcesContent","_file","__generatedMappings","slice","__originalMappings","sort","compareByOriginalPositions","defineProperty","get","s","_parseMappings","_nextCharIsMappingSeparator","aStr","charAt","aSourceRoot","mapping","generatedLine","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","str","temp","length","decode","generatedColumn","value","rest","source","at","originalLine","originalColumn","name","push","compareByGeneratedPositions","_findMapping","aNeedle","aMappings","aLineName","aColumnName","aComparator","search","computeColumnSpans","index","_generatedMappings","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","aArgs","needle","line","column","sourceContentFor","aSource","relative","has","indexOf","url","urlParse","fileUriAbsPath","scheme","path","generatedPositionFor","_originalMappings","lastColumn","allGeneratedPositionsFor","reverse","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aCallback","aContext","aOrder","context","order","forEach","aName","aDefaultValue","arguments","aUrl","match","urlRegexp","auth","host","port","urlGenerate","aParsedUrl","aPath","part","isAbsolute","parts","split","up","i","splice","aRoot","aPathUrl","aRootUrl","dataUrlRegexp","joined","substr","toSetString","fromSetString","strcmp","aStr1","aStr2","s1","s2","mappingA","mappingB","onlyCompareOriginal","cmp","onlyCompareGenerated","recursiveSearch","aLow","aHigh","aHaystack","aCompare","mid","Math","floor","_array","_set","aArray","aAllowDuplicates","set","len","add","isDuplicate","idx","hasOwnProperty","aIdx","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","base64","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","encode","digit","encoded","vlq","aOutParam","continuation","strLen","result","shift","charToIntMap","intToCharMap","ch","aNumber","aChar","StackTraceGPS","_createXMLHTTPObject","xmlhttp","XMLHttpFactories","XMLHttpRequest","ActiveXObject","e","_xdr","callback","errback","req","open","onerror","onreadystatechange","readyState","status","responseText","send","_findFunctionName","commentPos","reFunctionDeclaration","reFunctionExpression","reFunctionEvaluation","lines","code","maxLines","min","exec","_ensureSupportedEnvironment","_ensureStackFrameIsLegit","stackframe","_findSourceMappingURL","_newLocationInfoFromSourceMap","rawSourceMap","loc","opts","sourceCache","ajax","_atob","input","window","atob","Buffer","_get","location","Promise","resolve","reject","isDataUrl","offline","supportedEncoding","sourceMapStart","encodedSource","bind","pinpoint","getMappedLocation","then","mappedStackFrame","resolveMappedStackFrame","findFunctionName","guessedFunctionName","sourceMappingURL","substring","lastIndexOf"],"mappings":"CAAA,SAAAA,EAAAC,GACA,YAEA,mBAAAC,SAAAA,OAAAC,IACAD,OAAA,gBAAAD,GACA,gBAAAG,SACAC,OAAAD,QAAAH,IAEAD,EAAAM,WAAAL,KAEAM,KAAA,WACA,YACA,SAAAC,GAAAC,GACA,OAAAC,MAAAC,WAAAF,KAAAG,SAAAH,GAGA,QAAAH,GAAAO,EAAAC,EAAAC,EAAAC,EAAAC,GACAC,SAAAL,GACAN,KAAAY,gBAAAN,GAEAK,SAAAJ,GACAP,KAAAa,QAAAN,GAEAI,SAAAH,GACAR,KAAAc,YAAAN,GAEAG,SAAAF,GACAT,KAAAe,cAAAN,GAEAE,SAAAD,GACAV,KAAAgB,gBAAAN,GA+DA,MA3DAX,GAAAkB,WACAC,gBAAA,WACA,MAAAlB,MAAAM,cAEAM,gBAAA,SAAAO,GACAnB,KAAAM,aAAAc,OAAAD,IAGAE,QAAA,WACA,MAAArB,MAAAO,MAEAM,QAAA,SAAAM,GACA,GAAA,mBAAAG,OAAAL,UAAAM,SAAAC,KAAAL,GACA,KAAA,IAAAM,WAAA,wBAEAzB,MAAAO,KAAAY,GAOAO,YAAA,WACA,MAAA1B,MAAAQ,UAEAM,YAAA,SAAAK,GACAnB,KAAAQ,SAAAY,OAAAD,IAGAQ,cAAA,WACA,MAAA3B,MAAAS,YAEAM,cAAA,SAAAI,GACA,IAAAlB,EAAAkB,GACA,KAAA,IAAAM,WAAA,+BAEAzB,MAAAS,WAAAmB,OAAAT,IAGAU,gBAAA,WACA,MAAA7B,MAAAU,cAEAM,gBAAA,SAAAG,GACA,IAAAlB,EAAAkB,GACA,KAAA,IAAAM,WAAA,iCAEAzB,MAAAU,aAAAkB,OAAAT,IAGAI,SAAA,WACA,GAAAjB,GAAAN,KAAAkB,mBAAA,cACAX,EAAA,KAAAP,KAAAqB,eAAAS,KAAA,KAAA,IACAtB,EAAAR,KAAA0B,cAAA,IAAA1B,KAAA0B,cAAA,GACAjB,EAAAR,EAAAD,KAAA2B,iBAAA,IAAA3B,KAAA2B,gBAAA,GACAjB,EAAAT,EAAAD,KAAA6B,mBAAA,IAAA7B,KAAA6B,kBAAA,EACA,OAAAvB,GAAAC,EAAAC,EAAAC,EAAAC,IAIAX,GC7FA,IAAAgC,WACA,SAAAC,GAKA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAArC,OAGA,IAAAC,GAAAqC,EAAAD,IACArC,WACAuC,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAV,KAAA1B,EAAAD,QAAAC,EAAAA,EAAAD,QAAAoC,GAGAnC,EAAAuC,QAAA,EAGAvC,EAAAD,QAvBA,GAAAsC,KAqCA,OATAF,GAAAK,EAAAN,EAGAC,EAAAM,EAAAJ,EAGAF,EAAAO,EAAA,GAGAP,EAAA,KAKA,SAAAnC,EAAAD,EAAAoC,GAEA,GAAAQ,EASAA,GAAA,SAAAC,EAAA7C,EAAAC,GAqCA,QAAA6C,GAAAC,GACA,GAAAC,GAAAD,CACA,iBAAAA,KACAC,EAAAC,KAAAC,MAAAH,EAAAI,QAAA,WAAA,KAGA,IAAAC,GAAAC,EAAAC,OAAAN,EAAA,WACAO,EAAAF,EAAAC,OAAAN,EAAA,WAGAQ,EAAAH,EAAAC,OAAAN,EAAA,YACAS,EAAAJ,EAAAC,OAAAN,EAAA,aAAA,MACAU,EAAAL,EAAAC,OAAAN,EAAA,iBAAA,MACAW,EAAAN,EAAAC,OAAAN,EAAA,YACAY,EAAAP,EAAAC,OAAAN,EAAA,OAAA,KAIA,IAAAI,GAAAjD,KAAA0D,SACA,KAAA,IAAAC,OAAA,wBAAAV,EAMAG,GAAAA,EAAAQ,IAAAV,EAAAW,WAMA7D,KAAA8D,OAAAC,EAAAC,UAAAX,GAAA,GACArD,KAAAiE,SAAAF,EAAAC,UAAAZ,GAAA,GAEApD,KAAAsD,WAAAA,EACAtD,KAAAuD,eAAAA,EACAvD,KAAAkE,UAAAV,EACAxD,KAAAyD,KAAAA,EAxEA,GAAAP,GAAAjB,EAAA,GACAkC,EAAAlC,EAAA,GACA8B,EAAA9B,EAAA,GAAA8B,SACAK,EAAAnC,EAAA,EA+EAU,GAAA0B,cACA,SAAAzB,GACA,GAAA0B,GAAAhD,OAAAiD,OAAA5B,EAAA1B,UAaA,OAXAqD,GAAAR,OAAAC,EAAAC,UAAApB,EAAAkB,OAAAU,WAAA,GACAF,EAAAL,SAAAF,EAAAC,UAAApB,EAAAqB,SAAAO,WAAA,GACAF,EAAAhB,WAAAV,EAAA6B,YACAH,EAAAf,eAAAX,EAAA8B,wBAAAJ,EAAAL,SAAAO,UACAF,EAAAhB,YACAgB,EAAAb,KAAAb,EAAA+B,MAEAL,EAAAM,oBAAAhC,EAAAsB,UAAAM,UAAAK,QACAP,EAAAQ,mBAAAlC,EAAAsB,UAAAM,UAAAK,QACAE,KAAA7B,EAAA8B,4BAEAV,GAMA3B,EAAA1B,UAAAyC,SAAA,EAKApC,OAAA2D,eAAAtC,EAAA1B,UAAA,WACAiE,IAAA,WACA,MAAAlF,MAAAiE,SAAAO,UAAAZ,IAAA,SAAAuB,GACA,MAAA,OAAAnF,KAAAsD,WAAAJ,EAAApB,KAAA9B,KAAAsD,WAAA6B,GAAAA,GACAnF,SAkCA2C,EAAA1B,UAAA2D,oBAAA,KACAtD,OAAA2D,eAAAtC,EAAA1B,UAAA,sBACAiE,IAAA,WAOA,MANAlF,MAAA4E,sBACA5E,KAAA4E,uBACA5E,KAAA8E,sBACA9E,KAAAoF,eAAApF,KAAAkE,UAAAlE,KAAAsD,aAGAtD,KAAA4E,uBAIAjC,EAAA1B,UAAA6D,mBAAA,KACAxD,OAAA2D,eAAAtC,EAAA1B,UAAA,qBACAiE,IAAA,WAOA,MANAlF,MAAA8E,qBACA9E,KAAA4E,uBACA5E,KAAA8E,sBACA9E,KAAAoF,eAAApF,KAAAkE,UAAAlE,KAAAsD,aAGAtD,KAAA8E,sBAIAnC,EAAA1B,UAAAoE,4BACA,SAAAC,GACA,GAAA/C,GAAA+C,EAAAC,OAAA,EACA,OAAA,MAAAhD,GAAA,MAAAA,GAQAI,EAAA1B,UAAAmE,eACA,SAAAE,EAAAE,GAWA,IAVA,GAQAC,GARAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAAV,EACAW,KAGAD,EAAAE,OAAA,GACA,GAAA,MAAAF,EAAAT,OAAA,GACAG,IACAM,EAAAA,EAAAnB,MAAA,GACAc,EAAA,MAEA,IAAA,MAAAK,EAAAT,OAAA,GACAS,EAAAA,EAAAnB,MAAA,OAEA,CAUA,GATAY,KACAA,EAAAC,cAAAA,EAGAtB,EAAA+B,OAAAH,EAAAC,GACAR,EAAAW,gBAAAT,EAAAM,EAAAI,MACAV,EAAAF,EAAAW,gBACAJ,EAAAC,EAAAK,KAEAN,EAAAE,OAAA,IAAAlG,KAAAqF,4BAAAW,GAAA,CAMA,GAJA5B,EAAA+B,OAAAH,EAAAC,GACAR,EAAAc,OAAAvG,KAAAiE,SAAAuC,GAAAV,EAAAG,EAAAI,OACAP,GAAAG,EAAAI,MACAL,EAAAC,EAAAK,KACA,IAAAN,EAAAE,QAAAlG,KAAAqF,4BAAAW,GACA,KAAA,IAAArC,OAAA,yCAUA,IANAS,EAAA+B,OAAAH,EAAAC,GACAR,EAAAgB,aAAAb,EAAAK,EAAAI,MACAT,EAAAH,EAAAgB,aAEAhB,EAAAgB,cAAA,EACAT,EAAAC,EAAAK,KACA,IAAAN,EAAAE,QAAAlG,KAAAqF,4BAAAW,GACA,KAAA,IAAArC,OAAA,yCAIAS,GAAA+B,OAAAH,EAAAC,GACAR,EAAAiB,eAAAb,EAAAI,EAAAI,MACAR,EAAAJ,EAAAiB,eACAV,EAAAC,EAAAK,KAEAN,EAAAE,OAAA,IAAAlG,KAAAqF,4BAAAW,KAEA5B,EAAA+B,OAAAH,EAAAC,GACAR,EAAAkB,KAAA3G,KAAA8D,OAAA0C,GAAAT,EAAAE,EAAAI,OACAN,GAAAE,EAAAI,MACAL,EAAAC,EAAAK,MAIAtG,KAAA4E,oBAAAgC,KAAAnB,GACA,gBAAAA,GAAAgB,cACAzG,KAAA8E,mBAAA8B,KAAAnB,GAKAzF,KAAA4E,oBAAAG,KAAA7B,EAAA2D,6BACA7G,KAAA8E,mBAAAC,KAAA7B,EAAA8B,6BAOArC,EAAA1B,UAAA6F,aACA,SAAAC,EAAAC,EAAAC,EACAC,EAAAC,GAMA,GAAAJ,EAAAE,IAAA,EACA,KAAA,IAAAxF,WAAA,gDACAsF,EAAAE,GAEA,IAAAF,EAAAG,GAAA,EACA,KAAA,IAAAzF,WAAA,kDACAsF,EAAAG,GAGA,OAAA/C,GAAAiD,OAAAL,EAAAC,EAAAG,IAOAxE,EAAA1B,UAAAoG,mBACA,WACA,IAAA,GAAAC,GAAA,EAAAA,EAAAtH,KAAAuH,mBAAArB,SAAAoB,EAAA,CACA,GAAA7B,GAAAzF,KAAAuH,mBAAAD,EAMA,IAAAA,EAAA,EAAAtH,KAAAuH,mBAAArB,OAAA,CACA,GAAAsB,GAAAxH,KAAAuH,mBAAAD,EAAA,EAEA,IAAA7B,EAAAC,gBAAA8B,EAAA9B,cAAA,CACAD,EAAAgC,oBAAAD,EAAApB,gBAAA,CACA,WAKAX,EAAAgC,oBAAAC,EAAAA,IAmBA/E,EAAA1B,UAAA0G,oBACA,SAAAC,GACA,GAAAC,IACAnC,cAAAxC,EAAAC,OAAAyE,EAAA,QACAxB,gBAAAlD,EAAAC,OAAAyE,EAAA,WAGAN,EAAAtH,KAAA8G,aAAAe,EACA7H,KAAAuH,mBACA,gBACA,kBACArE,EAAA2D,4BAEA,IAAAS,GAAA,EAAA,CACA,GAAA7B,GAAAzF,KAAAuH,mBAAAD,EAEA,IAAA7B,EAAAC,gBAAAmC,EAAAnC,cAAA,CACA,GAAAa,GAAArD,EAAAC,OAAAsC,EAAA,SAAA,KAIA,OAHA,OAAAc,GAAA,MAAAvG,KAAAsD,aACAiD,EAAArD,EAAApB,KAAA9B,KAAAsD,WAAAiD,KAGAA,OAAAA,EACAuB,KAAA5E,EAAAC,OAAAsC,EAAA,eAAA,MACAsC,OAAA7E,EAAAC,OAAAsC,EAAA,iBAAA,MACAkB,KAAAzD,EAAAC,OAAAsC,EAAA,OAAA,QAKA,OACAc,OAAA,KACAuB,KAAA,KACAC,OAAA,KACApB,KAAA,OASAhE,EAAA1B,UAAA+G,iBACA,SAAAC,GACA,IAAAjI,KAAAuD,eACA,MAAA,KAOA,IAJA,MAAAvD,KAAAsD,aACA2E,EAAA/E,EAAAgF,SAAAlI,KAAAsD,WAAA2E,IAGAjI,KAAAiE,SAAAkE,IAAAF,GACA,MAAAjI,MAAAuD,eAAAvD,KAAAiE,SAAAmE,QAAAH,GAGA,IAAAI,EACA,IAAA,MAAArI,KAAAsD,aACA+E,EAAAnF,EAAAoF,SAAAtI,KAAAsD,aAAA,CAKA,GAAAiF,GAAAN,EAAAjF,QAAA,aAAA,GACA,IAAA,QAAAqF,EAAAG,QACAxI,KAAAiE,SAAAkE,IAAAI,GACA,MAAAvI,MAAAuD,eAAAvD,KAAAiE,SAAAmE,QAAAG,GAGA,MAAAF,EAAAI,MAAA,KAAAJ,EAAAI,OACAzI,KAAAiE,SAAAkE,IAAA,IAAAF,GACA,MAAAjI,MAAAuD,eAAAvD,KAAAiE,SAAAmE,QAAA,IAAAH,IAIA,KAAA,IAAAtE,OAAA,IAAAsE,EAAA,+BAiBAtF,EAAA1B,UAAAyH,qBACA,SAAAd,GACA,GAAAC,IACAtB,OAAArD,EAAAC,OAAAyE,EAAA,UACAnB,aAAAvD,EAAAC,OAAAyE,EAAA,QACAlB,eAAAxD,EAAAC,OAAAyE,EAAA,UAGA,OAAA5H,KAAAsD,aACAuE,EAAAtB,OAAArD,EAAAgF,SAAAlI,KAAAsD,WAAAuE,EAAAtB,QAGA,IAAAe,GAAAtH,KAAA8G,aAAAe,EACA7H,KAAA2I,kBACA,eACA,iBACAzF,EAAA8B,2BAEA,IAAAsC,GAAA,EAAA,CACA,GAAA7B,GAAAzF,KAAA2I,kBAAArB,EAEA,QACAQ,KAAA5E,EAAAC,OAAAsC,EAAA,gBAAA,MACAsC,OAAA7E,EAAAC,OAAAsC,EAAA,kBAAA,MACAmD,WAAA1F,EAAAC,OAAAsC,EAAA,sBAAA,OAIA,OACAqC,KAAA,KACAC,OAAA,KACAa,WAAA,OAiBAjG,EAAA1B,UAAA4H,yBACA,SAAAjB,GAKA,GAAAC,IACAtB,OAAArD,EAAAC,OAAAyE,EAAA,UACAnB,aAAAvD,EAAAC,OAAAyE,EAAA,QACAlB,eAAAgB,EAAAA,EAGA,OAAA1H,KAAAsD,aACAuE,EAAAtB,OAAArD,EAAAgF,SAAAlI,KAAAsD,WAAAuE,EAAAtB,QAGA,IAAA/C,MAEA8D,EAAAtH,KAAA8G,aAAAe,EACA7H,KAAA2I,kBACA,eACA,iBACAzF,EAAA8B,2BACA,IAAAsC,GAAA,EAGA,IAFA,GAAA7B,GAAAzF,KAAA2I,kBAAArB,GAEA7B,GAAAA,EAAAgB,eAAAoB,EAAApB,cACAjD,EAAAoD,MACAkB,KAAA5E,EAAAC,OAAAsC,EAAA,gBAAA,MACAsC,OAAA7E,EAAAC,OAAAsC,EAAA,kBAAA,MACAmD,WAAA1F,EAAAC,OAAAsC,EAAA,sBAAA,QAGAA,EAAAzF,KAAA2I,oBAAArB,EAIA,OAAA9D,GAAAsF,WAGAnG,EAAAoG,gBAAA,EACApG,EAAAqG,eAAA,EAkBArG,EAAA1B,UAAAgI,YACA,SAAAC,EAAAC,EAAAC,GACA,GAGA5F,GAHA6F,EAAAF,GAAA,KACAG,EAAAF,GAAAzG,EAAAoG,eAGA,QAAAO,GACA,IAAA3G,GAAAoG,gBACAvF,EAAAxD,KAAAuH,kBACA,MACA,KAAA5E,GAAAqG,eACAxF,EAAAxD,KAAA2I,iBACA,MACA,SACA,KAAA,IAAAhF,OAAA,+BAGA,GAAAL,GAAAtD,KAAAsD,UACAE,GAAAI,IAAA,SAAA6B,GACA,GAAAc,GAAAd,EAAAc,MAIA,OAHA,OAAAA,GAAA,MAAAjD,IACAiD,EAAArD,EAAApB,KAAAwB,EAAAiD,KAGAA,OAAAA,EACAb,cAAAD,EAAAC,cACAU,gBAAAX,EAAAW,gBACAK,aAAAhB,EAAAgB,aACAC,eAAAjB,EAAAiB,eACAC,KAAAlB,EAAAkB,QAEA4C,QAAAL,EAAAG,IAGAxJ,EAAA8C,kBAAAA,GAEAnB,KAAA3B,EAAAoC,EAAApC,EAAAC,KAAAa,SAAA8B,IAAA3C,EAAAD,QAAA4C,KAKA,SAAA3C,EAAAD,EAAAoC,GAEA,GAAAQ,EASAA,GAAA,SAAAC,EAAA7C,EAAAC,GAYA,QAAAqD,GAAAyE,EAAA4B,EAAAC,GACA,GAAAD,IAAA5B,GACA,MAAAA,GAAA4B,EACA,IAAA,IAAAE,UAAAxD,OACA,MAAAuD,EAEA,MAAA,IAAA9F,OAAA,IAAA6F,EAAA,6BAQA,QAAAlB,GAAAqB,GACA,GAAAC,GAAAD,EAAAC,MAAAC,EACA,OAAAD,IAIApB,OAAAoB,EAAA,GACAE,KAAAF,EAAA,GACAG,KAAAH,EAAA,GACAI,KAAAJ,EAAA,GACAnB,KAAAmB,EAAA,IAPA,KAYA,QAAAK,GAAAC,GACA,GAAA7B,GAAA,EAiBA,OAhBA6B,GAAA1B,SACAH,GAAA6B,EAAA1B,OAAA,KAEAH,GAAA,KACA6B,EAAAJ,OACAzB,GAAA6B,EAAAJ,KAAA,KAEAI,EAAAH,OACA1B,GAAA6B,EAAAH,MAEAG,EAAAF,OACA3B,GAAA,IAAA6B,EAAAF,MAEAE,EAAAzB,OACAJ,GAAA6B,EAAAzB,MAEAJ,EAeA,QAAAxE,GAAAsG,GACA,GAAA1B,GAAA0B,EACA9B,EAAAC,EAAA6B,EACA,IAAA9B,EAAA,CACA,IAAAA,EAAAI,KACA,MAAA0B,EAEA1B,GAAAJ,EAAAI,KAKA,IAAA,GAAA2B,GAHAC,EAAA,MAAA5B,EAAAlD,OAAA,GAEA+E,EAAA7B,EAAA8B,MAAA,OACAC,EAAA,EAAAC,EAAAH,EAAApE,OAAA,EAAAuE,GAAA,EAAAA,IACAL,EAAAE,EAAAG,GACA,MAAAL,EACAE,EAAAI,OAAAD,EAAA,GACA,OAAAL,EACAI,IACAA,EAAA,IACA,KAAAJ,GAIAE,EAAAI,OAAAD,EAAA,EAAAD,GACAA,EAAA,IAEAF,EAAAI,OAAAD,EAAA,GACAD,KAUA,OANA/B,GAAA6B,EAAAxI,KAAA,KAEA,KAAA2G,IACAA,EAAA4B,EAAA,IAAA,KAGAhC,GACAA,EAAAI,KAAAA,EACAwB,EAAA5B,IAEAI,EAoBA,QAAA3G,GAAA6I,EAAAR,GACA,KAAAQ,IACAA,EAAA,KAEA,KAAAR,IACAA,EAAA,IAEA,IAAAS,GAAAtC,EAAA6B,GACAU,EAAAvC,EAAAqC,EAMA,IALAE,IACAF,EAAAE,EAAApC,MAAA,KAIAmC,IAAAA,EAAApC,OAIA,MAHAqC,KACAD,EAAApC,OAAAqC,EAAArC,QAEAyB,EAAAW,EAGA,IAAAA,GAAAT,EAAAP,MAAAkB,GACA,MAAAX,EAIA,IAAAU,IAAAA,EAAAd,OAAAc,EAAApC,KAEA,MADAoC,GAAAd,KAAAI,EACAF,EAAAY,EAGA,IAAAE,GAAA,MAAAZ,EAAA5E,OAAA,GACA4E,EACAtG,EAAA8G,EAAA3H,QAAA,OAAA,IAAA,IAAAmH,EAEA,OAAAU,IACAA,EAAApC,KAAAsC,EACAd,EAAAY,IAEAE,EAUA,QAAA7C,GAAAyC,EAAAR,GACA,KAAAQ,IACAA,EAAA,KAGAA,EAAAA,EAAA3H,QAAA,MAAA,GAGA,IAAAqF,GAAAC,EAAAqC,EACA,OAAA,KAAAR,EAAA5E,OAAA,IAAA8C,GAAA,KAAAA,EAAAI,KACA0B,EAAAtF,MAAA,GAGA,IAAAsF,EAAA/B,QAAAuC,EAAA,KACAR,EAAAa,OAAAL,EAAAzE,OAAA,GACAiE,EAaA,QAAAc,GAAA3F,GACA,MAAA,IAAAA,EAIA,QAAA4F,GAAA5F,GACA,MAAAA,GAAA0F,OAAA,GAIA,QAAAG,GAAAC,EAAAC,GACA,GAAAC,GAAAF,GAAA,GACAG,EAAAF,GAAA,EACA,QAAAC,EAAAC,IAAAA,EAAAD,GAWA,QAAAtG,GAAAwG,EAAAC,EAAAC,GACA,GAAAC,EAGA,QADAA,EAAAR,EAAAK,EAAAjF,OAAAkF,EAAAlF,SAEAoF,GAGAA,EAAAH,EAAA/E,aAAAgF,EAAAhF,cAEAkF,GAGAA,EAAAH,EAAA9E,eAAA+E,EAAA/E,eACAiF,GAAAD,EACAC,GAGAA,EAAAR,EAAAK,EAAA7E,KAAA8E,EAAA9E,OAEAgF,GAGAA,EAAAH,EAAA9F,cAAA+F,EAAA/F,cACAiG,EACAA,EAGAH,EAAApF,gBAAAqF,EAAArF,kBAaA,QAAAS,GAAA2E,EAAAC,EAAAG,GACA,GAAAD,EAGA,QADAA,EAAAH,EAAA9F,cAAA+F,EAAA/F,eAEAiG,GAGAA,EAAAH,EAAApF,gBAAAqF,EAAArF,gBACAuF,GAAAC,EACAD,GAGAA,EAAAR,EAAAK,EAAAjF,OAAAkF,EAAAlF,SAEAoF,GAGAA,EAAAH,EAAA/E,aAAAgF,EAAAhF,cAEAkF,GAGAA,EAAAH,EAAA9E,eAAA+E,EAAA/E,eACAiF,EACAA,EAGAR,EAAAK,EAAA7E,KAAA8E,EAAA9E,QA5RA9G,EAAAsD,OAAAA,CAEA,IAAA0G,GAAA,iEACAiB,EAAA,eAeAjL,GAAAyI,SAAAA,EAsBAzI,EAAAoK,YAAAA,EAwDApK,EAAAgE,UAAAA,EA2DAhE,EAAAiC,KAAAA,EAyBAjC,EAAAqI,SAAAA,EAcArI,EAAAoL,YAAAA,EAKApL,EAAAqL,cAAAA,EA8CArL,EAAAmF,2BAAAA,EAyCAnF,EAAAgH,4BAAAA,GAEArF,KAAA3B,EAAAoC,EAAApC,EAAAC,KAAAa,SAAA8B,IAAA3C,EAAAD,QAAA4C,KAKA,SAAA3C,EAAAD,EAAAoC,GAEA,GAAAQ,EASAA,GAAA,SAAAC,EAAA7C,EAAAC,GAWA,QAAA+L,GAAAC,EAAAC,EAAAhF,EAAAiF,EAAAC,GAWA,GAAAC,GAAAC,KAAAC,OAAAL,EAAAD,GAAA,GAAAA,EACAH,EAAAM,EAAAlF,EAAAiF,EAAAE,IAAA,EACA,OAAA,KAAAP,EAEAO,EAEAP,EAAA,EAEAI,EAAAG,EAAA,EAEAL,EAAAK,EAAAH,EAAAhF,EAAAiF,EAAAC,GAIAC,EAIAA,EAAAJ,EAAA,EAEAD,EAAAC,EAAAI,EAAAnF,EAAAiF,EAAAC,GAIA,EAAAH,EAAA,GAAAA,EAiBAjM,EAAAuH,OAAA,SAAAL,EAAAiF,EAAAC,GACA,MAAA,KAAAD,EAAA9F,OACA,GAEA2F,EAAA,GAAAG,EAAA9F,OAAAa,EAAAiF,EAAAC,KAGAzK,KAAA3B,EAAAoC,EAAApC,EAAAC,KAAAa,SAAA8B,IAAA3C,EAAAD,QAAA4C,KAKA,SAAA3C,EAAAD,EAAAoC,GAEA,GAAAQ,EASAA,GAAA,SAAAC,EAAA7C,EAAAC,GAUA,QAAAiE,KACA/D,KAAAqM,UACArM,KAAAsM,QAVA,GAAApJ,GAAAjB,EAAA,EAgBA8B,GAAAC,UAAA,SAAAuI,EAAAC,GAEA,IAAA,GADAC,GAAA,GAAA1I,GACA0G,EAAA,EAAAiC,EAAAH,EAAArG,OAAAwG,EAAAjC,EAAAA,IACAgC,EAAAE,IAAAJ,EAAA9B,GAAA+B,EAEA,OAAAC,IAQA1I,EAAA9C,UAAA0L,IAAA,SAAArH,EAAAkH,GACA,GAAAI,GAAA5M,KAAAmI,IAAA7C,GACAuH,EAAA7M,KAAAqM,OAAAnG,SACA0G,GAAAJ,IACAxM,KAAAqM,OAAAzF,KAAAtB,GAEAsH,IACA5M,KAAAsM,KAAApJ,EAAA+H,YAAA3F,IAAAuH,IASA9I,EAAA9C,UAAAkH,IAAA,SAAA7C,GACA,MAAAhE,QAAAL,UAAA6L,eAAAtL,KAAAxB,KAAAsM,KACApJ,EAAA+H,YAAA3F,KAQAvB,EAAA9C,UAAAmH,QAAA,SAAA9C,GACA,GAAAtF,KAAAmI,IAAA7C,GACA,MAAAtF,MAAAsM,KAAApJ,EAAA+H,YAAA3F,GAEA,MAAA,IAAA3B,OAAA,IAAA2B,EAAA,yBAQAvB,EAAA9C,UAAAuF,GAAA,SAAAuG,GACA,GAAAA,GAAA,GAAAA,EAAA/M,KAAAqM,OAAAnG,OACA,MAAAlG,MAAAqM,OAAAU,EAEA,MAAA,IAAApJ,OAAA,yBAAAoJ,IAQAhJ,EAAA9C,UAAAuD,QAAA,WACA,MAAAxE,MAAAqM,OAAAxH,SAGAhF,EAAAkE,SAAAA,GAEAvC,KAAA3B,EAAAoC,EAAApC,EAAAC,KAAAa,SAAA8B,IAAA3C,EAAAD,QAAA4C,KAKA,SAAA3C,EAAAD,EAAAoC,GAEA,GAAAQ,EAuCAA,GAAA,SAAAC,EAAA7C,EAAAC,GAiCA,QAAAkN,GAAAC,GACA,MAAA,GAAAA,IACAA,GAAA,GAAA,GACAA,GAAA,GAAA,EASA,QAAAC,GAAAD,GACA,GAAAE,GAAA,KAAA,EAAAF,GACAG,EAAAH,GAAA,CACA,OAAAE,IACAC,EACAA,EAhDA,GAAAC,GAAApL,EAAA,GAcAqL,EAAA,EAGAC,EAAA,GAAAD,EAGAE,EAAAD,EAAA,EAGAE,EAAAF,CA+BA1N,GAAA6N,OAAA,SAAAT,GACA,GACAU,GADAC,EAAA,GAGAC,EAAAb,EAAAC,EAEA,GACAU,GAAAE,EAAAL,EACAK,KAAAP,EACAO,EAAA,IAGAF,GAAAF,GAEAG,GAAAP,EAAAK,OAAAC,SACAE,EAAA,EAEA,OAAAD,IAOA/N,EAAAsG,OAAA,SAAAb,EAAAwI,GACA,GAIAC,GAAAJ,EAJAlD,EAAA,EACAuD,EAAA1I,EAAAY,OACA+H,EAAA,EACAC,EAAA,CAGA,GAAA,CACA,GAAAzD,GAAAuD,EACA,KAAA,IAAArK,OAAA,6CAEAgK,GAAAN,EAAAlH,OAAAb,EAAAC,OAAAkF,MACAsD,KAAAJ,EAAAF,GACAE,GAAAH,EACAS,GAAAN,GAAAO,EACAA,GAAAZ,QACAS,EAEAD,GAAAzH,MAAA6G,EAAAe,GACAH,EAAAxH,KAAAhB,EAAAT,MAAA4F,KAGAjJ,KAAA3B,EAAAoC,EAAApC,EAAAC,KAAAa,SAAA8B,IAAA3C,EAAAD,QAAA4C,KAKA,SAAA3C,EAAAD,EAAAoC,GAEA,GAAAQ,EASAA,GAAA,SAAAC,EAAA7C,EAAAC,GAEA,GAAAqO,MACAC,IAEA,oEACA7D,MAAA,IACAhB,QAAA,SAAA8E,EAAA/G,GACA6G,EAAAE,GAAA/G,EACA8G,EAAA9G,GAAA+G,IAMAxO,EAAA6N,OAAA,SAAAY,GACA,GAAAA,IAAAF,GACA,MAAAA,GAAAE,EAEA,MAAA,IAAA7M,WAAA,6BAAA6M,IAMAzO,EAAAsG,OAAA,SAAAoI,GACA,GAAAA,IAAAJ,GACA,MAAAA,GAAAI,EAEA,MAAA,IAAA9M,WAAA,8BAAA8M,KAGA/M,KAAA3B,EAAAoC,EAAApC,EAAAC,KAAAa,SAAA8B,IAAA3C,EAAAD,QAAA4C,QCnzCA,SAAAhD,EAAAC,GACA,YAIA,mBAAAC,SAAAA,OAAAC,IACAD,OAAA,kBAAA,aAAA,cAAAD,GACA,gBAAAG,SACAC,OAAAD,QAAAH,EAAAgD,QAAA,iDAAAA,QAAA,eAEAjD,EAAA+O,cAAA9O,EAAAD,EAAAsC,UAAAtC,EAAAM,aAEAC,KAAA,SAAA+B,EAAAhC,GACA,YAOA,SAAA0O,KASA,IAAA,GARAC,GACAC,GACA,WACA,MAAA,IAAAC,iBACA,WACA,MAAA,IAAAC,eAAA,uBAGApE,EAAA,EAAAA,EAAAkE,EAAAzI,OAAAuE,IACA,IAIA,MAHAiE,GAAAC,EAAAlE,KAEAgE,EAAAE,EAAAlE,GACAiE,EACA,MAAAI,KAYA,QAAAC,GAAA1G,EAAA2G,EAAAC,GACA,GAAAC,GAAAT,GACAS,GAAAC,KAAA,MAAA9G,GACA6G,EAAAE,QAAAH,EACAC,EAAAG,mBAAA,WACA,GAAA,IAAAH,EAAAI,WAAA,CACA,GAAAJ,EAAAK,QAAA,KAAAL,EAAAK,OAAA,IACA,MAAAP,GAAAE,EAAAM,aAEAP,GAAA,GAAAtL,OAAA,sBAAA0E,MAIA6G,EAAAO,OAGA,QAAAC,GAAAnJ,EAAA9F,EAAAC,GAWA,IAAA,GADAoH,GAAAxF,EAAAqN,EARAC,EAAA,oCAEAC,EAAA,2DAEAC,EAAA,wEACAC,EAAAxJ,EAAAgE,MAAA,MAGAyF,EAAA,GAAAC,EAAA9D,KAAA+D,IAAAzP,EAAA,IACAgK,EAAA,EAAAwF,EAAAxF,IAAAA,EAQA,GANA3C,EAAAiI,EAAAtP,EAAAgK,EAAA,GACAkF,EAAA7H,EAAAM,QAAA,MACAuH,GAAA,IACA7H,EAAAA,EAAAkD,OAAA,EAAA2E,IAGA7H,EAAA,CAGA,GAFAkI,EAAAlI,EAAAkI,EACA1N,EAAAuN,EAAAM,KAAAH,GACA1N,GAAAA,EAAA,GACA,MAAAA,GAAA,EAGA,IADAA,EAAAsN,EAAAO,KAAAH,GACA1N,GAAAA,EAAA,GACA,MAAAA,GAAA,EAGA,IADAA,EAAAwN,EAAAK,KAAAH,GACA1N,GAAAA,EAAA,GACA,MAAAA,GAAA,GAIA,MAAA3B,QAGA,QAAAyP,KACA,GAAA,kBAAA9O,QAAA2D,gBAAA,kBAAA3D,QAAAiD,OACA,KAAA,IAAAZ,OAAA,mDAIA,QAAA0M,GAAAC,GACA,GAAA,gBAAAA,GACA,KAAA,IAAA7O,WAAA,oCACA,IAAA,gBAAA6O,GAAA9P,SACA,KAAA,IAAAiB,WAAA,kCACA,IAAA,gBAAA6O,GAAA7P,YAAA6P,EAAA7P,WAAA,IAAA,GAAA6P,EAAA7P,WAAA,EACA,KAAA,IAAAgB,WAAA,+CACA,IAAA,gBAAA6O,GAAA5P,cAAA4P,EAAA5P,aAAA,IAAA,GAAA4P,EAAA5P,aAAA,EACA,KAAA,IAAAe,WAAA,qDAEA,QAAA,EAGA,QAAA8O,GAAAhK,GACA,GAAAjE,GAAA,yCAAA6N,KAAA5J,EACA,IAAAjE,GAAAA,EAAA,GACA,MAAAA,GAAA,EAEA,MAAA,IAAAqB,OAAA,8BAIA,QAAA6M,GAAAC,EAAAlQ,EAAAE,EAAAC,GACA,GAAAgQ,GAAA,GAAA3O,GAAAY,kBAAA8N,GACA9I,qBAAAG,KAAArH,EAAAsH,OAAArH,GACA,OAAA,IAAAX,GAAA2Q,EAAA/J,KAAApG,EAAAmQ,EAAAnK,OAAAmK,EAAA5I,KAAA4I,EAAA3I,QASA,MAAA,SAAAyG,GAAAmC,GACA,MAAA3Q,gBAAAwO,IAGAmC,EAAAA,MAEA3Q,KAAA4Q,YAAAD,EAAAC,gBAEA5Q,KAAA6Q,KAAA9B,EAEA/O,KAAA8Q,MAAA,SAAAC,GACA,GAAAC,QAAAA,OAAAC,KACA,MAAAD,QAAAC,KAAAF,EACA,IAAA,mBAAAG,QACA,MAAA,IAAAA,QAAAH,EAAA,UAAAxP,SAAA,QAEA,MAAA,IAAAoC,OAAA,gCAGA3D,KAAAmR,KAAA,SAAAC,GACA,MAAA,IAAAC,SAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,UAAAJ,EAAApG,OAAA,EAAA,EACA,IAAAhL,KAAA4Q,YAAAQ,GACAE,EAAAtR,KAAA4Q,YAAAQ,QACA,IAAAT,EAAAc,UAAAD,EACAD,EAAA,GAAA5N,OAAA,qDAEA,IAAA6N,EAAA,CACA,GAAAE,GAAA,yBACA,IAAAN,EAAApG,OAAA,EAAA0G,EAAAxL,UAAAwL,EACAH,EAAA,GAAA5N,OAAA,8DACA,CACA,GAAAgO,GAAA,QAAAzL,OAAAwL,EAAAxL,OAAA,IAAAA,OACA0L,EAAAR,EAAApG,OAAA2G,GACApL,EAAAvG,KAAA8Q,MAAAc,EACA5R,MAAA4Q,YAAAQ,GAAA7K,EACA+K,EAAA/K,QAGAvG,MAAA6Q,KAAAO,EAAA,SAAA7K,GACAvG,KAAA4Q,YAAAQ,GAAA7K,EACA+K,EAAA/K,IACAsL,KAAA7R,MAAAuR,IAGAM,KAAA7R,QAWAA,KAAA8R,SAAA,SAAAxB,GACA,MAAA,IAAAe,SAAA,SAAAC,EAAAC,GACAvR,KAAA+R,kBAAAzB,GAAA0B,KAAA,SAAAC,GACA,QAAAC,KACAZ,EAAAW,GAGAjS,KAAAmS,iBAAAF,GACAD,KAAAV,EAAAY,GACA,SAAAA,IACAL,KAAA7R,MAAAuR,IACAM,KAAA7R,QAUAA,KAAAmS,iBAAA,SAAA7B,GACA,MAAA,IAAAe,SAAA,SAAAC,EAAAC,GACAlB,EAAAC,GACAtQ,KAAAmR,KAAAb,EAAA9P,UAAAwR,KAAA,SAAAzL,GACA,GAAA6L,GAAA1C,EAAAnJ,EAAA+J,EAAA7P,WAAA6P,EAAA5P,aACA4Q,GAAA,GAAAvR,GAAAqS,EAAA9B,EAAA/P,KAAA+P,EAAA9P,SAAA8P,EAAA7P,WAAA6P,EAAA5P,gBACA6Q,IACAM,KAAA7R,aAUAA,KAAA+R,kBAAA,SAAAzB,GACA,MAAA,IAAAe,SAAA,SAAAC,EAAAC,GACAnB,IACAC,EAAAC,EAEA,IAAA9P,GAAA8P,EAAA9P,QACAR,MAAAmR,KAAA3Q,GAAAwR,KAAA,SAAAzL,GACA,GAAA8L,GAAA9B,EAAAhK,EACA,OAAA8L,EAAA,KACAA,EAAA7R,EAAA8R,UAAA,EAAA9R,EAAA+R,YAAA,KAAA,GAAAF,GAEArS,KAAAmR,KAAAkB,GAAAL,KAAA,SAAApO,GACA,GAAAnD,GAAA6P,EAAA7P,WACAC,EAAA4P,EAAA5P,YACA4Q,GAAAd,EAAA5M,EAAA0M,EAAA/P,KAAAE,EAAAC,KACA6Q,GAAA,SAAAA,IACAM,KAAA7R,MAAAuR,GAAA,SAAAA,IACAM,KAAA7R,UA7GA,GAAAwO,GAAAmC","file":"stacktrace-gps.min.js","sourcesContent":["(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n","var SourceMap =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\tif (false) {\n\t    var define = require('amdefine')(module, require);\n\t}\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  var util = __webpack_require__(1);\n\t  var binarySearch = __webpack_require__(2);\n\t  var ArraySet = __webpack_require__(3).ArraySet;\n\t  var base64VLQ = __webpack_require__(4);\n\n\t  /**\n\t   * A SourceMapConsumer instance represents a parsed source map which we can\n\t   * query for information about the original file positions by giving it a file\n\t   * position in the generated source.\n\t   *\n\t   * The only parameter is the raw source map (either as a JSON string, or\n\t   * already parsed to an object). According to the spec, source maps have the\n\t   * following attributes:\n\t   *\n\t   *   - version: Which version of the source map spec this map is following.\n\t   *   - sources: An array of URLs to the original source files.\n\t   *   - names: An array of identifiers which can be referrenced by individual mappings.\n\t   *   - sourceRoot: Optional. The URL root from which all sources are relative.\n\t   *   - sourcesContent: Optional. An array of contents of the original source files.\n\t   *   - mappings: A string of base64 VLQs which contain the actual mappings.\n\t   *   - file: Optional. The generated file this source map is associated with.\n\t   *\n\t   * Here is an example source map, taken from the source map spec[0]:\n\t   *\n\t   *     {\n\t   *       version : 3,\n\t   *       file: \"out.js\",\n\t   *       sourceRoot : \"\",\n\t   *       sources: [\"foo.js\", \"bar.js\"],\n\t   *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n\t   *       mappings: \"AA,AB;;ABCDE;\"\n\t   *     }\n\t   *\n\t   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n\t   */\n\t  function SourceMapConsumer(aSourceMap) {\n\t    var sourceMap = aSourceMap;\n\t    if (typeof aSourceMap === 'string') {\n\t      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n\t    }\n\n\t    var version = util.getArg(sourceMap, 'version');\n\t    var sources = util.getArg(sourceMap, 'sources');\n\t    // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n\t    // requires the array) to play nice here.\n\t    var names = util.getArg(sourceMap, 'names', []);\n\t    var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n\t    var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n\t    var mappings = util.getArg(sourceMap, 'mappings');\n\t    var file = util.getArg(sourceMap, 'file', null);\n\n\t    // Once again, Sass deviates from the spec and supplies the version as a\n\t    // string rather than a number, so we use loose equality checking here.\n\t    if (version != this._version) {\n\t      throw new Error('Unsupported version: ' + version);\n\t    }\n\n\t    // Some source maps produce relative source paths like \"./foo.js\" instead of\n\t    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n\t    // See bugzil.la/1090768.\n\t    sources = sources.map(util.normalize);\n\n\t    // Pass `true` below to allow duplicate names and sources. While source maps\n\t    // are intended to be compressed and deduplicated, the TypeScript compiler\n\t    // sometimes generates source maps with duplicates in them. See Github issue\n\t    // #72 and bugzil.la/889492.\n\t    this._names = ArraySet.fromArray(names, true);\n\t    this._sources = ArraySet.fromArray(sources, true);\n\n\t    this.sourceRoot = sourceRoot;\n\t    this.sourcesContent = sourcesContent;\n\t    this._mappings = mappings;\n\t    this.file = file;\n\t  }\n\n\t  /**\n\t   * Create a SourceMapConsumer from a SourceMapGenerator.\n\t   *\n\t   * @param SourceMapGenerator aSourceMap\n\t   *        The source map that will be consumed.\n\t   * @returns SourceMapConsumer\n\t   */\n\t  SourceMapConsumer.fromSourceMap =\n\t    function SourceMapConsumer_fromSourceMap(aSourceMap) {\n\t      var smc = Object.create(SourceMapConsumer.prototype);\n\n\t      smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n\t      smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n\t      smc.sourceRoot = aSourceMap._sourceRoot;\n\t      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n\t                                                              smc.sourceRoot);\n\t      smc.file = aSourceMap._file;\n\n\t      smc.__generatedMappings = aSourceMap._mappings.toArray().slice();\n\t      smc.__originalMappings = aSourceMap._mappings.toArray().slice()\n\t        .sort(util.compareByOriginalPositions);\n\n\t      return smc;\n\t    };\n\n\t  /**\n\t   * The version of the source mapping spec that we are consuming.\n\t   */\n\t  SourceMapConsumer.prototype._version = 3;\n\n\t  /**\n\t   * The list of original sources.\n\t   */\n\t  Object.defineProperty(SourceMapConsumer.prototype, 'sources', {\n\t    get: function () {\n\t      return this._sources.toArray().map(function (s) {\n\t        return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n\t      }, this);\n\t    }\n\t  });\n\n\t  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n\t  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n\t  // are lazily instantiated, accessed via the `_generatedMappings` and\n\t  // `_originalMappings` getters respectively, and we only parse the mappings\n\t  // and create these arrays once queried for a source location. We jump through\n\t  // these hoops because there can be many thousands of mappings, and parsing\n\t  // them is expensive, so we only want to do it if we must.\n\t  //\n\t  // Each object in the arrays is of the form:\n\t  //\n\t  //     {\n\t  //       generatedLine: The line number in the generated code,\n\t  //       generatedColumn: The column number in the generated code,\n\t  //       source: The path to the original source file that generated this\n\t  //               chunk of code,\n\t  //       originalLine: The line number in the original source that\n\t  //                     corresponds to this chunk of generated code,\n\t  //       originalColumn: The column number in the original source that\n\t  //                       corresponds to this chunk of generated code,\n\t  //       name: The name of the original symbol which generated this chunk of\n\t  //             code.\n\t  //     }\n\t  //\n\t  // All properties except for `generatedLine` and `generatedColumn` can be\n\t  // `null`.\n\t  //\n\t  // `_generatedMappings` is ordered by the generated positions.\n\t  //\n\t  // `_originalMappings` is ordered by the original positions.\n\n\t  SourceMapConsumer.prototype.__generatedMappings = null;\n\t  Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n\t    get: function () {\n\t      if (!this.__generatedMappings) {\n\t        this.__generatedMappings = [];\n\t        this.__originalMappings = [];\n\t        this._parseMappings(this._mappings, this.sourceRoot);\n\t      }\n\n\t      return this.__generatedMappings;\n\t    }\n\t  });\n\n\t  SourceMapConsumer.prototype.__originalMappings = null;\n\t  Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n\t    get: function () {\n\t      if (!this.__originalMappings) {\n\t        this.__generatedMappings = [];\n\t        this.__originalMappings = [];\n\t        this._parseMappings(this._mappings, this.sourceRoot);\n\t      }\n\n\t      return this.__originalMappings;\n\t    }\n\t  });\n\n\t  SourceMapConsumer.prototype._nextCharIsMappingSeparator =\n\t    function SourceMapConsumer_nextCharIsMappingSeparator(aStr) {\n\t      var c = aStr.charAt(0);\n\t      return c === \";\" || c === \",\";\n\t    };\n\n\t  /**\n\t   * Parse the mappings in a string in to a data structure which we can easily\n\t   * query (the ordered arrays in the `this.__generatedMappings` and\n\t   * `this.__originalMappings` properties).\n\t   */\n\t  SourceMapConsumer.prototype._parseMappings =\n\t    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n\t      var generatedLine = 1;\n\t      var previousGeneratedColumn = 0;\n\t      var previousOriginalLine = 0;\n\t      var previousOriginalColumn = 0;\n\t      var previousSource = 0;\n\t      var previousName = 0;\n\t      var str = aStr;\n\t      var temp = {};\n\t      var mapping;\n\n\t      while (str.length > 0) {\n\t        if (str.charAt(0) === ';') {\n\t          generatedLine++;\n\t          str = str.slice(1);\n\t          previousGeneratedColumn = 0;\n\t        }\n\t        else if (str.charAt(0) === ',') {\n\t          str = str.slice(1);\n\t        }\n\t        else {\n\t          mapping = {};\n\t          mapping.generatedLine = generatedLine;\n\n\t          // Generated column.\n\t          base64VLQ.decode(str, temp);\n\t          mapping.generatedColumn = previousGeneratedColumn + temp.value;\n\t          previousGeneratedColumn = mapping.generatedColumn;\n\t          str = temp.rest;\n\n\t          if (str.length > 0 && !this._nextCharIsMappingSeparator(str)) {\n\t            // Original source.\n\t            base64VLQ.decode(str, temp);\n\t            mapping.source = this._sources.at(previousSource + temp.value);\n\t            previousSource += temp.value;\n\t            str = temp.rest;\n\t            if (str.length === 0 || this._nextCharIsMappingSeparator(str)) {\n\t              throw new Error('Found a source, but no line and column');\n\t            }\n\n\t            // Original line.\n\t            base64VLQ.decode(str, temp);\n\t            mapping.originalLine = previousOriginalLine + temp.value;\n\t            previousOriginalLine = mapping.originalLine;\n\t            // Lines are stored 0-based\n\t            mapping.originalLine += 1;\n\t            str = temp.rest;\n\t            if (str.length === 0 || this._nextCharIsMappingSeparator(str)) {\n\t              throw new Error('Found a source and line, but no column');\n\t            }\n\n\t            // Original column.\n\t            base64VLQ.decode(str, temp);\n\t            mapping.originalColumn = previousOriginalColumn + temp.value;\n\t            previousOriginalColumn = mapping.originalColumn;\n\t            str = temp.rest;\n\n\t            if (str.length > 0 && !this._nextCharIsMappingSeparator(str)) {\n\t              // Original name.\n\t              base64VLQ.decode(str, temp);\n\t              mapping.name = this._names.at(previousName + temp.value);\n\t              previousName += temp.value;\n\t              str = temp.rest;\n\t            }\n\t          }\n\n\t          this.__generatedMappings.push(mapping);\n\t          if (typeof mapping.originalLine === 'number') {\n\t            this.__originalMappings.push(mapping);\n\t          }\n\t        }\n\t      }\n\n\t      this.__generatedMappings.sort(util.compareByGeneratedPositions);\n\t      this.__originalMappings.sort(util.compareByOriginalPositions);\n\t    };\n\n\t  /**\n\t   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n\t   * we are searching for in the given \"haystack\" of mappings.\n\t   */\n\t  SourceMapConsumer.prototype._findMapping =\n\t    function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n\t                                           aColumnName, aComparator) {\n\t      // To return the position we are searching for, we must first find the\n\t      // mapping for the given position and then return the opposite position it\n\t      // points to. Because the mappings are sorted, we can use binary search to\n\t      // find the best mapping.\n\n\t      if (aNeedle[aLineName] <= 0) {\n\t        throw new TypeError('Line must be greater than or equal to 1, got '\n\t                            + aNeedle[aLineName]);\n\t      }\n\t      if (aNeedle[aColumnName] < 0) {\n\t        throw new TypeError('Column must be greater than or equal to 0, got '\n\t                            + aNeedle[aColumnName]);\n\t      }\n\n\t      return binarySearch.search(aNeedle, aMappings, aComparator);\n\t    };\n\n\t  /**\n\t   * Compute the last column for each generated mapping. The last column is\n\t   * inclusive.\n\t   */\n\t  SourceMapConsumer.prototype.computeColumnSpans =\n\t    function SourceMapConsumer_computeColumnSpans() {\n\t      for (var index = 0; index < this._generatedMappings.length; ++index) {\n\t        var mapping = this._generatedMappings[index];\n\n\t        // Mappings do not contain a field for the last generated columnt. We\n\t        // can come up with an optimistic estimate, however, by assuming that\n\t        // mappings are contiguous (i.e. given two consecutive mappings, the\n\t        // first mapping ends where the second one starts).\n\t        if (index + 1 < this._generatedMappings.length) {\n\t          var nextMapping = this._generatedMappings[index + 1];\n\n\t          if (mapping.generatedLine === nextMapping.generatedLine) {\n\t            mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n\t            continue;\n\t          }\n\t        }\n\n\t        // The last mapping for each line spans the entire line.\n\t        mapping.lastGeneratedColumn = Infinity;\n\t      }\n\t    };\n\n\t  /**\n\t   * Returns the original source, line, and column information for the generated\n\t   * source's line and column positions provided. The only argument is an object\n\t   * with the following properties:\n\t   *\n\t   *   - line: The line number in the generated source.\n\t   *   - column: The column number in the generated source.\n\t   *\n\t   * and an object is returned with the following properties:\n\t   *\n\t   *   - source: The original source file, or null.\n\t   *   - line: The line number in the original source, or null.\n\t   *   - column: The column number in the original source, or null.\n\t   *   - name: The original identifier, or null.\n\t   */\n\t  SourceMapConsumer.prototype.originalPositionFor =\n\t    function SourceMapConsumer_originalPositionFor(aArgs) {\n\t      var needle = {\n\t        generatedLine: util.getArg(aArgs, 'line'),\n\t        generatedColumn: util.getArg(aArgs, 'column')\n\t      };\n\n\t      var index = this._findMapping(needle,\n\t                                    this._generatedMappings,\n\t                                    \"generatedLine\",\n\t                                    \"generatedColumn\",\n\t                                    util.compareByGeneratedPositions);\n\n\t      if (index >= 0) {\n\t        var mapping = this._generatedMappings[index];\n\n\t        if (mapping.generatedLine === needle.generatedLine) {\n\t          var source = util.getArg(mapping, 'source', null);\n\t          if (source != null && this.sourceRoot != null) {\n\t            source = util.join(this.sourceRoot, source);\n\t          }\n\t          return {\n\t            source: source,\n\t            line: util.getArg(mapping, 'originalLine', null),\n\t            column: util.getArg(mapping, 'originalColumn', null),\n\t            name: util.getArg(mapping, 'name', null)\n\t          };\n\t        }\n\t      }\n\n\t      return {\n\t        source: null,\n\t        line: null,\n\t        column: null,\n\t        name: null\n\t      };\n\t    };\n\n\t  /**\n\t   * Returns the original source content. The only argument is the url of the\n\t   * original source file. Returns null if no original source content is\n\t   * availible.\n\t   */\n\t  SourceMapConsumer.prototype.sourceContentFor =\n\t    function SourceMapConsumer_sourceContentFor(aSource) {\n\t      if (!this.sourcesContent) {\n\t        return null;\n\t      }\n\n\t      if (this.sourceRoot != null) {\n\t        aSource = util.relative(this.sourceRoot, aSource);\n\t      }\n\n\t      if (this._sources.has(aSource)) {\n\t        return this.sourcesContent[this._sources.indexOf(aSource)];\n\t      }\n\n\t      var url;\n\t      if (this.sourceRoot != null\n\t          && (url = util.urlParse(this.sourceRoot))) {\n\t        // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n\t        // many users. We can help them out when they expect file:// URIs to\n\t        // behave like it would if they were running a local HTTP server. See\n\t        // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n\t        var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n\t        if (url.scheme == \"file\"\n\t            && this._sources.has(fileUriAbsPath)) {\n\t          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n\t        }\n\n\t        if ((!url.path || url.path == \"/\")\n\t            && this._sources.has(\"/\" + aSource)) {\n\t          return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n\t        }\n\t      }\n\n\t      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n\t    };\n\n\t  /**\n\t   * Returns the generated line and column information for the original source,\n\t   * line, and column positions provided. The only argument is an object with\n\t   * the following properties:\n\t   *\n\t   *   - source: The filename of the original source.\n\t   *   - line: The line number in the original source.\n\t   *   - column: The column number in the original source.\n\t   *\n\t   * and an object is returned with the following properties:\n\t   *\n\t   *   - line: The line number in the generated source, or null.\n\t   *   - column: The column number in the generated source, or null.\n\t   */\n\t  SourceMapConsumer.prototype.generatedPositionFor =\n\t    function SourceMapConsumer_generatedPositionFor(aArgs) {\n\t      var needle = {\n\t        source: util.getArg(aArgs, 'source'),\n\t        originalLine: util.getArg(aArgs, 'line'),\n\t        originalColumn: util.getArg(aArgs, 'column')\n\t      };\n\n\t      if (this.sourceRoot != null) {\n\t        needle.source = util.relative(this.sourceRoot, needle.source);\n\t      }\n\n\t      var index = this._findMapping(needle,\n\t                                    this._originalMappings,\n\t                                    \"originalLine\",\n\t                                    \"originalColumn\",\n\t                                    util.compareByOriginalPositions);\n\n\t      if (index >= 0) {\n\t        var mapping = this._originalMappings[index];\n\n\t        return {\n\t          line: util.getArg(mapping, 'generatedLine', null),\n\t          column: util.getArg(mapping, 'generatedColumn', null),\n\t          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t        };\n\t      }\n\n\t      return {\n\t        line: null,\n\t        column: null,\n\t        lastColumn: null\n\t      };\n\t    };\n\n\t  /**\n\t   * Returns all generated line and column information for the original source\n\t   * and line provided. The only argument is an object with the following\n\t   * properties:\n\t   *\n\t   *   - source: The filename of the original source.\n\t   *   - line: The line number in the original source.\n\t   *\n\t   * and an array of objects is returned, each with the following properties:\n\t   *\n\t   *   - line: The line number in the generated source, or null.\n\t   *   - column: The column number in the generated source, or null.\n\t   */\n\t  SourceMapConsumer.prototype.allGeneratedPositionsFor =\n\t    function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n\t      // When there is no exact match, SourceMapConsumer.prototype._findMapping\n\t      // returns the index of the closest mapping less than the needle. By\n\t      // setting needle.originalColumn to Infinity, we thus find the last\n\t      // mapping for the given line, provided such a mapping exists.\n\t      var needle = {\n\t        source: util.getArg(aArgs, 'source'),\n\t        originalLine: util.getArg(aArgs, 'line'),\n\t        originalColumn: Infinity\n\t      };\n\n\t      if (this.sourceRoot != null) {\n\t        needle.source = util.relative(this.sourceRoot, needle.source);\n\t      }\n\n\t      var mappings = [];\n\n\t      var index = this._findMapping(needle,\n\t                                    this._originalMappings,\n\t                                    \"originalLine\",\n\t                                    \"originalColumn\",\n\t                                    util.compareByOriginalPositions);\n\t      if (index >= 0) {\n\t        var mapping = this._originalMappings[index];\n\n\t        while (mapping && mapping.originalLine === needle.originalLine) {\n\t          mappings.push({\n\t            line: util.getArg(mapping, 'generatedLine', null),\n\t            column: util.getArg(mapping, 'generatedColumn', null),\n\t            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n\t          });\n\n\t          mapping = this._originalMappings[--index];\n\t        }\n\t      }\n\n\t      return mappings.reverse();\n\t    };\n\n\t  SourceMapConsumer.GENERATED_ORDER = 1;\n\t  SourceMapConsumer.ORIGINAL_ORDER = 2;\n\n\t  /**\n\t   * Iterate over each mapping between an original source/line/column and a\n\t   * generated line/column in this source map.\n\t   *\n\t   * @param Function aCallback\n\t   *        The function that is called with each mapping.\n\t   * @param Object aContext\n\t   *        Optional. If specified, this object will be the value of `this` every\n\t   *        time that `aCallback` is called.\n\t   * @param aOrder\n\t   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n\t   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n\t   *        iterate over the mappings sorted by the generated file's line/column\n\t   *        order or the original's source/line/column order, respectively. Defaults to\n\t   *        `SourceMapConsumer.GENERATED_ORDER`.\n\t   */\n\t  SourceMapConsumer.prototype.eachMapping =\n\t    function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n\t      var context = aContext || null;\n\t      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n\t      var mappings;\n\t      switch (order) {\n\t      case SourceMapConsumer.GENERATED_ORDER:\n\t        mappings = this._generatedMappings;\n\t        break;\n\t      case SourceMapConsumer.ORIGINAL_ORDER:\n\t        mappings = this._originalMappings;\n\t        break;\n\t      default:\n\t        throw new Error(\"Unknown order of iteration.\");\n\t      }\n\n\t      var sourceRoot = this.sourceRoot;\n\t      mappings.map(function (mapping) {\n\t        var source = mapping.source;\n\t        if (source != null && sourceRoot != null) {\n\t          source = util.join(sourceRoot, source);\n\t        }\n\t        return {\n\t          source: source,\n\t          generatedLine: mapping.generatedLine,\n\t          generatedColumn: mapping.generatedColumn,\n\t          originalLine: mapping.originalLine,\n\t          originalColumn: mapping.originalColumn,\n\t          name: mapping.name\n\t        };\n\t      }).forEach(aCallback, context);\n\t    };\n\n\t  exports.SourceMapConsumer = SourceMapConsumer;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\tif (false) {\n\t    var define = require('amdefine')(module, require);\n\t}\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  /**\n\t   * This is a helper function for getting values from parameter/options\n\t   * objects.\n\t   *\n\t   * @param args The object we are extracting values from\n\t   * @param name The name of the property we are getting.\n\t   * @param defaultValue An optional value to return if the property is missing\n\t   * from the object. If this is not specified and the property is missing, an\n\t   * error will be thrown.\n\t   */\n\t  function getArg(aArgs, aName, aDefaultValue) {\n\t    if (aName in aArgs) {\n\t      return aArgs[aName];\n\t    } else if (arguments.length === 3) {\n\t      return aDefaultValue;\n\t    } else {\n\t      throw new Error('\"' + aName + '\" is a required argument.');\n\t    }\n\t  }\n\t  exports.getArg = getArg;\n\n\t  var urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\n\t  var dataUrlRegexp = /^data:.+\\,.+$/;\n\n\t  function urlParse(aUrl) {\n\t    var match = aUrl.match(urlRegexp);\n\t    if (!match) {\n\t      return null;\n\t    }\n\t    return {\n\t      scheme: match[1],\n\t      auth: match[2],\n\t      host: match[3],\n\t      port: match[4],\n\t      path: match[5]\n\t    };\n\t  }\n\t  exports.urlParse = urlParse;\n\n\t  function urlGenerate(aParsedUrl) {\n\t    var url = '';\n\t    if (aParsedUrl.scheme) {\n\t      url += aParsedUrl.scheme + ':';\n\t    }\n\t    url += '//';\n\t    if (aParsedUrl.auth) {\n\t      url += aParsedUrl.auth + '@';\n\t    }\n\t    if (aParsedUrl.host) {\n\t      url += aParsedUrl.host;\n\t    }\n\t    if (aParsedUrl.port) {\n\t      url += \":\" + aParsedUrl.port\n\t    }\n\t    if (aParsedUrl.path) {\n\t      url += aParsedUrl.path;\n\t    }\n\t    return url;\n\t  }\n\t  exports.urlGenerate = urlGenerate;\n\n\t  /**\n\t   * Normalizes a path, or the path portion of a URL:\n\t   *\n\t   * - Replaces consequtive slashes with one slash.\n\t   * - Removes unnecessary '.' parts.\n\t   * - Removes unnecessary '<dir>/..' parts.\n\t   *\n\t   * Based on code in the Node.js 'path' core module.\n\t   *\n\t   * @param aPath The path or url to normalize.\n\t   */\n\t  function normalize(aPath) {\n\t    var path = aPath;\n\t    var url = urlParse(aPath);\n\t    if (url) {\n\t      if (!url.path) {\n\t        return aPath;\n\t      }\n\t      path = url.path;\n\t    }\n\t    var isAbsolute = (path.charAt(0) === '/');\n\n\t    var parts = path.split(/\\/+/);\n\t    for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n\t      part = parts[i];\n\t      if (part === '.') {\n\t        parts.splice(i, 1);\n\t      } else if (part === '..') {\n\t        up++;\n\t      } else if (up > 0) {\n\t        if (part === '') {\n\t          // The first part is blank if the path is absolute. Trying to go\n\t          // above the root is a no-op. Therefore we can remove all '..' parts\n\t          // directly after the root.\n\t          parts.splice(i + 1, up);\n\t          up = 0;\n\t        } else {\n\t          parts.splice(i, 2);\n\t          up--;\n\t        }\n\t      }\n\t    }\n\t    path = parts.join('/');\n\n\t    if (path === '') {\n\t      path = isAbsolute ? '/' : '.';\n\t    }\n\n\t    if (url) {\n\t      url.path = path;\n\t      return urlGenerate(url);\n\t    }\n\t    return path;\n\t  }\n\t  exports.normalize = normalize;\n\n\t  /**\n\t   * Joins two paths/URLs.\n\t   *\n\t   * @param aRoot The root path or URL.\n\t   * @param aPath The path or URL to be joined with the root.\n\t   *\n\t   * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n\t   *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n\t   *   first.\n\t   * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n\t   *   is updated with the result and aRoot is returned. Otherwise the result\n\t   *   is returned.\n\t   *   - If aPath is absolute, the result is aPath.\n\t   *   - Otherwise the two paths are joined with a slash.\n\t   * - Joining for example 'http://' and 'www.example.com' is also supported.\n\t   */\n\t  function join(aRoot, aPath) {\n\t    if (aRoot === \"\") {\n\t      aRoot = \".\";\n\t    }\n\t    if (aPath === \"\") {\n\t      aPath = \".\";\n\t    }\n\t    var aPathUrl = urlParse(aPath);\n\t    var aRootUrl = urlParse(aRoot);\n\t    if (aRootUrl) {\n\t      aRoot = aRootUrl.path || '/';\n\t    }\n\n\t    // `join(foo, '//www.example.org')`\n\t    if (aPathUrl && !aPathUrl.scheme) {\n\t      if (aRootUrl) {\n\t        aPathUrl.scheme = aRootUrl.scheme;\n\t      }\n\t      return urlGenerate(aPathUrl);\n\t    }\n\n\t    if (aPathUrl || aPath.match(dataUrlRegexp)) {\n\t      return aPath;\n\t    }\n\n\t    // `join('http://', 'www.example.com')`\n\t    if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n\t      aRootUrl.host = aPath;\n\t      return urlGenerate(aRootUrl);\n\t    }\n\n\t    var joined = aPath.charAt(0) === '/'\n\t      ? aPath\n\t      : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n\t    if (aRootUrl) {\n\t      aRootUrl.path = joined;\n\t      return urlGenerate(aRootUrl);\n\t    }\n\t    return joined;\n\t  }\n\t  exports.join = join;\n\n\t  /**\n\t   * Make a path relative to a URL or another path.\n\t   *\n\t   * @param aRoot The root path or URL.\n\t   * @param aPath The path or URL to be made relative to aRoot.\n\t   */\n\t  function relative(aRoot, aPath) {\n\t    if (aRoot === \"\") {\n\t      aRoot = \".\";\n\t    }\n\n\t    aRoot = aRoot.replace(/\\/$/, '');\n\n\t    // XXX: It is possible to remove this block, and the tests still pass!\n\t    var url = urlParse(aRoot);\n\t    if (aPath.charAt(0) == \"/\" && url && url.path == \"/\") {\n\t      return aPath.slice(1);\n\t    }\n\n\t    return aPath.indexOf(aRoot + '/') === 0\n\t      ? aPath.substr(aRoot.length + 1)\n\t      : aPath;\n\t  }\n\t  exports.relative = relative;\n\n\t  /**\n\t   * Because behavior goes wacky when you set `__proto__` on objects, we\n\t   * have to prefix all the strings in our set with an arbitrary character.\n\t   *\n\t   * See https://github.com/mozilla/source-map/pull/31 and\n\t   * https://github.com/mozilla/source-map/issues/30\n\t   *\n\t   * @param String aStr\n\t   */\n\t  function toSetString(aStr) {\n\t    return '$' + aStr;\n\t  }\n\t  exports.toSetString = toSetString;\n\n\t  function fromSetString(aStr) {\n\t    return aStr.substr(1);\n\t  }\n\t  exports.fromSetString = fromSetString;\n\n\t  function strcmp(aStr1, aStr2) {\n\t    var s1 = aStr1 || \"\";\n\t    var s2 = aStr2 || \"\";\n\t    return (s1 > s2) - (s1 < s2);\n\t  }\n\n\t  /**\n\t   * Comparator between two mappings where the original positions are compared.\n\t   *\n\t   * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t   * mappings with the same original source/line/column, but different generated\n\t   * line and column the same. Useful when searching for a mapping with a\n\t   * stubbed out mapping.\n\t   */\n\t  function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n\t    var cmp;\n\n\t    cmp = strcmp(mappingA.source, mappingB.source);\n\t    if (cmp) {\n\t      return cmp;\n\t    }\n\n\t    cmp = mappingA.originalLine - mappingB.originalLine;\n\t    if (cmp) {\n\t      return cmp;\n\t    }\n\n\t    cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t    if (cmp || onlyCompareOriginal) {\n\t      return cmp;\n\t    }\n\n\t    cmp = strcmp(mappingA.name, mappingB.name);\n\t    if (cmp) {\n\t      return cmp;\n\t    }\n\n\t    cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t    if (cmp) {\n\t      return cmp;\n\t    }\n\n\t    return mappingA.generatedColumn - mappingB.generatedColumn;\n\t  };\n\t  exports.compareByOriginalPositions = compareByOriginalPositions;\n\n\t  /**\n\t   * Comparator between two mappings where the generated positions are\n\t   * compared.\n\t   *\n\t   * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n\t   * mappings with the same generated line and column, but different\n\t   * source/name/original line and column the same. Useful when searching for a\n\t   * mapping with a stubbed out mapping.\n\t   */\n\t  function compareByGeneratedPositions(mappingA, mappingB, onlyCompareGenerated) {\n\t    var cmp;\n\n\t    cmp = mappingA.generatedLine - mappingB.generatedLine;\n\t    if (cmp) {\n\t      return cmp;\n\t    }\n\n\t    cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n\t    if (cmp || onlyCompareGenerated) {\n\t      return cmp;\n\t    }\n\n\t    cmp = strcmp(mappingA.source, mappingB.source);\n\t    if (cmp) {\n\t      return cmp;\n\t    }\n\n\t    cmp = mappingA.originalLine - mappingB.originalLine;\n\t    if (cmp) {\n\t      return cmp;\n\t    }\n\n\t    cmp = mappingA.originalColumn - mappingB.originalColumn;\n\t    if (cmp) {\n\t      return cmp;\n\t    }\n\n\t    return strcmp(mappingA.name, mappingB.name);\n\t  };\n\t  exports.compareByGeneratedPositions = compareByGeneratedPositions;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\tif (false) {\n\t    var define = require('amdefine')(module, require);\n\t}\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  /**\n\t   * Recursive implementation of binary search.\n\t   *\n\t   * @param aLow Indices here and lower do not contain the needle.\n\t   * @param aHigh Indices here and higher do not contain the needle.\n\t   * @param aNeedle The element being searched for.\n\t   * @param aHaystack The non-empty array being searched.\n\t   * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n\t   */\n\t  function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare) {\n\t    // This function terminates when one of the following is true:\n\t    //\n\t    //   1. We find the exact element we are looking for.\n\t    //\n\t    //   2. We did not find the exact element, but we can return the index of\n\t    //      the next closest element that is less than that element.\n\t    //\n\t    //   3. We did not find the exact element, and there is no next-closest\n\t    //      element which is less than the one we are searching for, so we\n\t    //      return -1.\n\t    var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n\t    var cmp = aCompare(aNeedle, aHaystack[mid], true);\n\t    if (cmp === 0) {\n\t      // Found the element we are looking for.\n\t      return mid;\n\t    }\n\t    else if (cmp > 0) {\n\t      // aHaystack[mid] is greater than our needle.\n\t      if (aHigh - mid > 1) {\n\t        // The element is in the upper half.\n\t        return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare);\n\t      }\n\t      // We did not find an exact match, return the next closest one\n\t      // (termination case 2).\n\t      return mid;\n\t    }\n\t    else {\n\t      // aHaystack[mid] is less than our needle.\n\t      if (mid - aLow > 1) {\n\t        // The element is in the lower half.\n\t        return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare);\n\t      }\n\t      // The exact needle element was not found in this haystack. Determine if\n\t      // we are in termination case (2) or (3) and return the appropriate thing.\n\t      return aLow < 0 ? -1 : aLow;\n\t    }\n\t  }\n\n\t  /**\n\t   * This is an implementation of binary search which will always try and return\n\t   * the index of next lowest value checked if there is no exact hit. This is\n\t   * because mappings between original and generated line/col pairs are single\n\t   * points, and there is an implicit region between each of them, so a miss\n\t   * just means that you aren't on the very start of a region.\n\t   *\n\t   * @param aNeedle The element you are looking for.\n\t   * @param aHaystack The array that is being searched.\n\t   * @param aCompare A function which takes the needle and an element in the\n\t   *     array and returns -1, 0, or 1 depending on whether the needle is less\n\t   *     than, equal to, or greater than the element, respectively.\n\t   */\n\t  exports.search = function search(aNeedle, aHaystack, aCompare) {\n\t    if (aHaystack.length === 0) {\n\t      return -1;\n\t    }\n\t    return recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack, aCompare)\n\t  };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\tif (false) {\n\t    var define = require('amdefine')(module, require);\n\t}\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  var util = __webpack_require__(1);\n\n\t  /**\n\t   * A data structure which is a combination of an array and a set. Adding a new\n\t   * member is O(1), testing for membership is O(1), and finding the index of an\n\t   * element is O(1). Removing elements from the set is not supported. Only\n\t   * strings are supported for membership.\n\t   */\n\t  function ArraySet() {\n\t    this._array = [];\n\t    this._set = {};\n\t  }\n\n\t  /**\n\t   * Static method for creating ArraySet instances from an existing array.\n\t   */\n\t  ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n\t    var set = new ArraySet();\n\t    for (var i = 0, len = aArray.length; i < len; i++) {\n\t      set.add(aArray[i], aAllowDuplicates);\n\t    }\n\t    return set;\n\t  };\n\n\t  /**\n\t   * Add the given string to this set.\n\t   *\n\t   * @param String aStr\n\t   */\n\t  ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n\t    var isDuplicate = this.has(aStr);\n\t    var idx = this._array.length;\n\t    if (!isDuplicate || aAllowDuplicates) {\n\t      this._array.push(aStr);\n\t    }\n\t    if (!isDuplicate) {\n\t      this._set[util.toSetString(aStr)] = idx;\n\t    }\n\t  };\n\n\t  /**\n\t   * Is the given string a member of this set?\n\t   *\n\t   * @param String aStr\n\t   */\n\t  ArraySet.prototype.has = function ArraySet_has(aStr) {\n\t    return Object.prototype.hasOwnProperty.call(this._set,\n\t                                                util.toSetString(aStr));\n\t  };\n\n\t  /**\n\t   * What is the index of the given string in the array?\n\t   *\n\t   * @param String aStr\n\t   */\n\t  ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n\t    if (this.has(aStr)) {\n\t      return this._set[util.toSetString(aStr)];\n\t    }\n\t    throw new Error('\"' + aStr + '\" is not in the set.');\n\t  };\n\n\t  /**\n\t   * What is the element at the given index?\n\t   *\n\t   * @param Number aIdx\n\t   */\n\t  ArraySet.prototype.at = function ArraySet_at(aIdx) {\n\t    if (aIdx >= 0 && aIdx < this._array.length) {\n\t      return this._array[aIdx];\n\t    }\n\t    throw new Error('No element indexed by ' + aIdx);\n\t  };\n\n\t  /**\n\t   * Returns the array representation of this set (which has the proper indices\n\t   * indicated by indexOf). Note that this is a copy of the internal array used\n\t   * for storing the members so that no one can mess with internal state.\n\t   */\n\t  ArraySet.prototype.toArray = function ArraySet_toArray() {\n\t    return this._array.slice();\n\t  };\n\n\t  exports.ArraySet = ArraySet;\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t *\n\t * Based on the Base 64 VLQ implementation in Closure Compiler:\n\t * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n\t *\n\t * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n\t * Redistribution and use in source and binary forms, with or without\n\t * modification, are permitted provided that the following conditions are\n\t * met:\n\t *\n\t *  * Redistributions of source code must retain the above copyright\n\t *    notice, this list of conditions and the following disclaimer.\n\t *  * Redistributions in binary form must reproduce the above\n\t *    copyright notice, this list of conditions and the following\n\t *    disclaimer in the documentation and/or other materials provided\n\t *    with the distribution.\n\t *  * Neither the name of Google Inc. nor the names of its\n\t *    contributors may be used to endorse or promote products derived\n\t *    from this software without specific prior written permission.\n\t *\n\t * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\t * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\t * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\t * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n\t * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n\t * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n\t * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n\t * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n\t * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n\t * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n\t * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t */\n\tif (false) {\n\t    var define = require('amdefine')(module, require);\n\t}\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  var base64 = __webpack_require__(5);\n\n\t  // A single base 64 digit can contain 6 bits of data. For the base 64 variable\n\t  // length quantities we use in the source map spec, the first bit is the sign,\n\t  // the next four bits are the actual value, and the 6th bit is the\n\t  // continuation bit. The continuation bit tells us whether there are more\n\t  // digits in this value following this digit.\n\t  //\n\t  //   Continuation\n\t  //   |    Sign\n\t  //   |    |\n\t  //   V    V\n\t  //   101011\n\n\t  var VLQ_BASE_SHIFT = 5;\n\n\t  // binary: 100000\n\t  var VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n\t  // binary: 011111\n\t  var VLQ_BASE_MASK = VLQ_BASE - 1;\n\n\t  // binary: 100000\n\t  var VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n\t  /**\n\t   * Converts from a two-complement value to a value where the sign bit is\n\t   * placed in the least significant bit.  For example, as decimals:\n\t   *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n\t   *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n\t   */\n\t  function toVLQSigned(aValue) {\n\t    return aValue < 0\n\t      ? ((-aValue) << 1) + 1\n\t      : (aValue << 1) + 0;\n\t  }\n\n\t  /**\n\t   * Converts to a two-complement value from a value where the sign bit is\n\t   * placed in the least significant bit.  For example, as decimals:\n\t   *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n\t   *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n\t   */\n\t  function fromVLQSigned(aValue) {\n\t    var isNegative = (aValue & 1) === 1;\n\t    var shifted = aValue >> 1;\n\t    return isNegative\n\t      ? -shifted\n\t      : shifted;\n\t  }\n\n\t  /**\n\t   * Returns the base 64 VLQ encoded value.\n\t   */\n\t  exports.encode = function base64VLQ_encode(aValue) {\n\t    var encoded = \"\";\n\t    var digit;\n\n\t    var vlq = toVLQSigned(aValue);\n\n\t    do {\n\t      digit = vlq & VLQ_BASE_MASK;\n\t      vlq >>>= VLQ_BASE_SHIFT;\n\t      if (vlq > 0) {\n\t        // There are still more digits in this value, so we must make sure the\n\t        // continuation bit is marked.\n\t        digit |= VLQ_CONTINUATION_BIT;\n\t      }\n\t      encoded += base64.encode(digit);\n\t    } while (vlq > 0);\n\n\t    return encoded;\n\t  };\n\n\t  /**\n\t   * Decodes the next base 64 VLQ value from the given string and returns the\n\t   * value and the rest of the string via the out parameter.\n\t   */\n\t  exports.decode = function base64VLQ_decode(aStr, aOutParam) {\n\t    var i = 0;\n\t    var strLen = aStr.length;\n\t    var result = 0;\n\t    var shift = 0;\n\t    var continuation, digit;\n\n\t    do {\n\t      if (i >= strLen) {\n\t        throw new Error(\"Expected more digits in base 64 VLQ value.\");\n\t      }\n\t      digit = base64.decode(aStr.charAt(i++));\n\t      continuation = !!(digit & VLQ_CONTINUATION_BIT);\n\t      digit &= VLQ_BASE_MASK;\n\t      result = result + (digit << shift);\n\t      shift += VLQ_BASE_SHIFT;\n\t    } while (continuation);\n\n\t    aOutParam.value = fromVLQSigned(result);\n\t    aOutParam.rest = aStr.slice(i);\n\t  };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* -*- Mode: js; js-indent-level: 2; -*- */\n\t/*\n\t * Copyright 2011 Mozilla Foundation and contributors\n\t * Licensed under the New BSD license. See LICENSE or:\n\t * http://opensource.org/licenses/BSD-3-Clause\n\t */\n\tif (false) {\n\t    var define = require('amdefine')(module, require);\n\t}\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function (require, exports, module) {\n\n\t  var charToIntMap = {};\n\t  var intToCharMap = {};\n\n\t  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n\t    .split('')\n\t    .forEach(function (ch, index) {\n\t      charToIntMap[ch] = index;\n\t      intToCharMap[index] = ch;\n\t    });\n\n\t  /**\n\t   * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n\t   */\n\t  exports.encode = function base64_encode(aNumber) {\n\t    if (aNumber in intToCharMap) {\n\t      return intToCharMap[aNumber];\n\t    }\n\t    throw new TypeError(\"Must be between 0 and 63: \" + aNumber);\n\t  };\n\n\t  /**\n\t   * Decode a single base 64 digit to an integer.\n\t   */\n\t  exports.decode = function base64_decode(aChar) {\n\t    if (aChar in charToIntMap) {\n\t      return charToIntMap[aChar];\n\t    }\n\t    throw new TypeError(\"Not a valid base 64 digit: \" + aChar);\n\t  };\n\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }\n/******/ ]);","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map/source-map-consumer'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap, root.StackFrame);\n    }\n}(this, function (SourceMap, StackFrame) {\n    'use strict';\n\n    /**\n     * Create XHR or equivalent object for this environment.\n     * @returns XMLHttpRequest, XDomainRequest or ActiveXObject\n     * @private\n     */\n    function _createXMLHTTPObject() {\n        var xmlhttp;\n        var XMLHttpFactories = [\n            function () {\n                return new XMLHttpRequest();\n            }, function () {\n                return new ActiveXObject('Microsoft.XMLHTTP');\n            }\n        ];\n        for (var i = 0; i < XMLHttpFactories.length; i++) {\n            try {\n                xmlhttp = XMLHttpFactories[i]();\n                // Use memoization to cache the factory\n                _createXMLHTTPObject = XMLHttpFactories[i]; // jshint ignore:line\n                return xmlhttp;\n            } catch (e) {\n            }\n        }\n    }\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param url [String]\n     * @param callback [Function] to callback on completion\n     * @param errback [Function] to callback on error\n     */\n    function _xdr(url, callback, errback) {\n        var req = _createXMLHTTPObject();\n        req.open('get', url);\n        req.onerror = errback;\n        req.onreadystatechange = function onreadystatechange() {\n            if (req.readyState === 4) {\n                if (req.status >= 200 && req.status < 400) {\n                    return callback(req.responseText);\n                } else {\n                    errback(new Error('Unable to retrieve ' + url));\n                }\n            }\n        };\n        req.send();\n    }\n\n    function _findFunctionName(source, lineNumber, columnNumber) {\n        // function {name}({args}) m[1]=name m[2]=args\n        var reFunctionDeclaration = /function\\s+([^(]*?)\\s*\\(([^)]*)\\)/;\n        // {name} = function ({args}) TODO args capture\n        var reFunctionExpression = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/;\n        // {name} = eval()\n        var reFunctionEvaluation = /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/;\n        var lines = source.split('\\n');\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '', line, maxLines = Math.min(lineNumber, 20), m, commentPos;\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            line = lines[lineNumber - i - 1];\n            commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                m = reFunctionExpression.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionDeclaration.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n                m = reFunctionEvaluation.exec(code);\n                if (m && m[1]) {\n                    return m[1];\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' || stackframe.lineNumber % 1 !== 0 || stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' || stackframe.columnNumber % 1 !== 0 || stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var m = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)$/.exec(source);\n        if (m && m[1]) {\n            return m[1];\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _newLocationInfoFromSourceMap(rawSourceMap, args, lineNumber, columnNumber) {\n        var loc = new SourceMap.SourceMapConsumer(rawSourceMap)\n            .originalPositionFor({line: lineNumber, column: columnNumber});\n        return new StackFrame(loc.name, args, loc.source, loc.line, loc.column);\n    }\n\n    /**\n     * @param opts: [Object] options.\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n\n        this.ajax = _xdr;\n\n        this._atob = function (input) {\n            if (window && window.atob) {\n                return window.atob(input);\n            } else if (typeof Buffer !== 'undefined') {\n                return new Buffer(input, 'base64').toString('utf-8');\n            }\n            throw new Error('No base64 decoder available');\n        };\n\n        this._get = function _get(location) {\n            return new Promise(function (resolve, reject) {\n                var isDataUrl = location.substr(0, 5) === 'data:';\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline && !isDataUrl) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    if (isDataUrl) {\n                        var supportedEncoding = 'application/json;base64';\n                        if (location.substr(5, supportedEncoding.length) !== supportedEncoding) {\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\n                        } else {\n                            var sourceMapStart = 'data:'.length + supportedEncoding.length + ','.length;\n                            var encodedSource = location.substr(sourceMapStart);\n                            var source = this._atob(encodedSource);\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        }\n                    } else {\n                        this.ajax(location, function (source) {\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        }.bind(this), reject);\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with source-mapped location\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return new Promise(function (resolve, reject) {\n                this.getMappedLocation(stackframe).then(function (mappedStackFrame) {\n                    function resolveMappedStackFrame() {\n                        resolve(mappedStackFrame);\n                    }\n\n                    this.findFunctionName(mappedStackFrame)\n                        .then(resolve, resolveMappedStackFrame)\n                        ['catch'](resolveMappedStackFrame);\n                }.bind(this), reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with guessed function name\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function (resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var guessedFunctionName = _findFunctionName(source, stackframe.lineNumber, stackframe.columnNumber);\n                    resolve(new StackFrame(guessedFunctionName, stackframe.args, stackframe.fileName, stackframe.lineNumber, stackframe.columnNumber));\n                }, reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param stackframe - {StackFrame}-like object\n         *      {fileName: 'path/to/file.js', lineNumber: 100, columnNumber: 5}\n         * @return StackFrame with source-mapped location\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function (resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                var fileName = stackframe.fileName;\n                this._get(fileName).then(function (source) {\n                    var sourceMappingURL = _findSourceMappingURL(source);\n                    if (sourceMappingURL[0] !== '/') {\n                        sourceMappingURL = fileName.substring(0, fileName.lastIndexOf('/') + 1) + sourceMappingURL;\n                    }\n                    this._get(sourceMappingURL).then(function (map) {\n                        var lineNumber = stackframe.lineNumber;\n                        var columnNumber = stackframe.columnNumber;\n                        resolve(_newLocationInfoFromSourceMap(map, stackframe.args, lineNumber, columnNumber));\n                    }, reject)['catch'](reject);\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n"],"sourceRoot":"/source/"}